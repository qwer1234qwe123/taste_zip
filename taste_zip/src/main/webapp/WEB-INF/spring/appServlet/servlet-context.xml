<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 파일업로드 관련 핵심적인 역할을 하는 객체 빈 등록 -->
	<beans:bean id="multipartResolver"
	            class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>
	
	   <!-- RestTemplate Bean 등록 -->
    <beans:bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />

	<!-- 인터셉터 관련 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/**/*.doo"/>
		
			<!-- 인터셉터에서 제외되는 URL 목록 정의  -->
			
			<!-- 메인 페이지 요청 -->
			<exclude-mapping path="/"/>
			<exclude-mapping path="/index.do"/>
			
			<!-- JSP에서 발생하는 에러처리 페이지 요청 -->
			<exclude-mapping path="/error/error500.do"/>
			
			<!-- 회원관리에서 제외되는 요청 -->
			<exclude-mapping path="/member/join.do"/>
			<exclude-mapping path="/member/checkId.do"/>
			<exclude-mapping path="/member/checkEmail.do"/>
			<exclude-mapping path="/member/joinProcess.do"/>
			<exclude-mapping path="/member/login.do"/>
			<exclude-mapping path="/member/loginProcess.do"/>
			
			<!-- 일반게시판에서 제외되는 요청 -->
			<!-- <exclude-mapping path="/board/view.do"/> -->
			
			<!-- 공지사항 게시판에서 제외되는 요청 -->
			<!-- <exclude-mapping path="/notice_board/view.do"/>
			<exclude-mapping path="/notice_board/download.do"/> -->
			
			
			<!-- 로그인 인터셉터 빈 등록 -->
			<beans:bean id="loginInterceptor" class="com.taste.zip.handler.LoginInterceptor"/>
		
		</interceptor>
	
	
	</interceptors>
	
	
	<!-- 프로젝트 내의 빈 등록을 컴포넌트 스캔을 이용해서 특정 어노테이션이 붙은 자바 클래스를 자동으로 빈으로 등록함 
	     @Component, @Configuration, @Controller, @Service, @Repository @RestController 등-->
	<context:component-scan base-package="com.taste.zip" />
	

	
	
</beans:beans>